public class Solution {
    // DO NOT MODIFY THE LIST. IT IS READ ONLY
    public int trap(final List<Integer> A) {
        int n = A.size();
        
        //Finding the maximum element present in the left side 
        int[]Lmax = new int[n];
        Lmax[0] = A.get(0);
        for(int i = 1 ; i < n ; i++){
            Lmax[i] = Math.max(Lmax[i - 1] , A.get(i));
        }

        //Finding the maximum element present in the right side
        int[]Rmax = new int[n];
        Rmax[n - 1] = A.get(n - 1);
        for(int i = n - 2 ; i >= 0 ; i--){
            Rmax[i] = Math.max(Rmax[i + 1] , A.get(i));
        } 

        //Calculate the trapped water 
        int water = 0;
        for(int i = 0 ; i < n ; i++){
            int Amount = Math.min(Rmax[i] , Lmax[i]) - A.get(i);
            water += Amount;
        }
        return water;
    }
}
